name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  flutter_analyze_and_test:
    name: Run flutter analyze and tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.OS }}-flutter-
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
        
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        
      - name: Analyze project source
        run: flutter analyze --no-fatal-infos
      
      - name: Run tests with coverage
        run: flutter test --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false
          
      - name: Check Test Coverage
        run: |
          COVERAGE_PERCENT=$(lcov --summary coverage/lcov.info | grep "lines" | awk '{print $4}' | cut -d '%' -f 1)
          echo "Test coverage: $COVERAGE_PERCENT%"
          if (( $(echo "$COVERAGE_PERCENT < 70" | bc -l) )); then
            echo "Warning: Test coverage is below 70%. Please add more tests."
            # Don't fail the build yet, just warn
            # exit 1
          fi
          
  flutter_build:
    name: Build Flutter apps
    needs: flutter_analyze_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.x'
          channel: 'stable'
          cache: true
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --release --flavor development --target lib/main_development.dart
        
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: hive-ui-apk
          path: build/app/outputs/flutter-apk/app-development-release.apk
          
  notification:
    name: Notify team on failure
    needs: [flutter_analyze_and_test, flutter_build]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 