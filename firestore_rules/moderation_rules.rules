// HIVE UI Firestore Security Rules - Moderation
// These rules govern content moderation including reports, flagged content, and moderator actions

// Check if content has been hidden by moderators
function isContentHidden(content) {
  return content.isHidden == true;
}

// Check content toxicity score
function exceedsToxicityThreshold(content) {
  return content.toxicityScore > 0.8;
}

// Check if user has been restricted or banned
function isUserRestricted(userId) {
  return exists(/databases/$(database)/documents/restricted_users/$(userId));
}

// Verify if a user is allowed to report content (rate limiting)
function canReportContent(userId) {
  return !exists(/databases/$(database)/documents/user_report_limits/$(userId)) ||
         get(/databases/$(database)/documents/user_report_limits/$(userId)).data.lastReportTime < (request.time - duration.value(5, 'm'));
}

// Moderation queue access rules
match /moderation_queue/{moderationId} {
  // Anyone can read their own reported content
  allow read: if request.auth.uid == resource.data.contentCreatorId;
  
  // Moderators and admins can read all reports
  allow read: if isModerator() || isAdmin();
  
  // Users can create reports, subject to rate limiting
  allow create: if isAuthenticated() && 
                 canReportContent(request.auth.uid) &&
                 request.resource.data.reporterId == request.auth.uid;
  
  // Only moderators and admins can update moderation queue items
  allow update: if isModerator() || isAdmin();
  
  // Only admins can delete from the moderation queue
  allow delete: if isAdmin();
}

// Content reports from users
match /content_reports/{reportId} {
  // Creator can see reports against their content
  allow read: if request.auth.uid == resource.data.contentCreatorId;
  
  // Reporter can see their own reports
  allow read: if request.auth.uid == resource.data.reporterId;
  
  // Moderators and admins can see all reports
  allow read: if isModerator() || isAdmin();
  
  // Any authenticated user can create reports (with rate limiting)
  allow create: if isAuthenticated() && 
                 canReportContent(request.auth.uid) &&
                 request.resource.data.reporterId == request.auth.uid;
  
  // Only moderators and admins can update reports
  allow update: if isModerator() || isAdmin();
  
  // Only admins can delete reports
  allow delete: if isAdmin();
}

// Restricted users collection
match /restricted_users/{userId} {
  // Users can read their own restriction status
  allow read: if request.auth.uid == userId;
  
  // Moderators and admins can read all restrictions
  allow read: if isModerator() || isAdmin();
  
  // Only moderators and admins can create restrictions
  allow create: if isModerator() || isAdmin();
  
  // Only admins can update or remove restrictions
  allow update, delete: if isAdmin();
}

// User report rate limits
match /user_report_limits/{userId} {
  // Users can read their own report limits
  allow read: if request.auth.uid == userId;
  
  // Moderators and admins can read all user report limits
  allow read: if isModerator() || isAdmin();
  
  // System automatically updates report limits
  allow write: if isModerator() || isAdmin();
}

// Moderation actions log
match /moderation_actions/{actionId} {
  // Content creator can see moderation actions on their content
  allow read: if request.auth.uid == resource.data.contentCreatorId;
  
  // Moderators and admins can see all moderation actions
  allow read: if isModerator() || isAdmin();
  
  // Only moderators and admins can create moderation action logs
  allow create: if (isModerator() || isAdmin()) &&
                request.resource.data.moderatorId == request.auth.uid;
  
  // Only admins can update or delete moderation action logs
  allow update, delete: if isAdmin();
}

// Toxicity scores for content
match /content_toxicity/{contentId} {
  // Content creator can see toxicity scores for their content
  allow read: if request.auth.uid == get(/databases/$(database)/documents/$(resource.data.contentPath)).data.authorId ||
               request.auth.uid == get(/databases/$(database)/documents/$(resource.data.contentPath)).data.creatorId;
  
  // Moderators and admins can see all toxicity scores
  allow read: if isModerator() || isAdmin();
  
  // Only system processes and admins can write toxicity scores
  allow write: if isAdmin();
}

// Spam detection records
match /spam_detection/{contentId} {
  // Moderators and admins can read spam detection records
  allow read: if isModerator() || isAdmin();
  
  // Only system processes and admins can write spam detection records
  allow write: if isAdmin();
}

// Content appeal system
match /content_appeals/{appealId} {
  // Content creator can read and create appeals for their content
  allow read, create: if request.auth.uid == resource.data.contentCreatorId ||
                        request.auth.uid == request.resource.data.contentCreatorId;
  
  // Moderators and admins can read all appeals
  allow read: if isModerator() || isAdmin();
  
  // Only moderators and admins can update appeal status
  allow update: if isModerator() || isAdmin();
  
  // Only admins can delete appeals
  allow delete: if isAdmin();
}

// Helper function for determining if content should be hidden from user
function isContentHidden(data) {
  return data.isHidden == true && 
         !isModerator() && 
         !isAdmin() && 
         request.auth.uid != data.userId;
} 