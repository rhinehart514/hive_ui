// Mocks generated by Mockito 5.4.6 from annotations
// in hive_ui/test/features/auth/presentation/providers/verification_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:hive_ui/application/services/verification_service.dart' as _i3;
import 'package:hive_ui/core/result/result.dart' as _i2;
import 'package:hive_ui/domain/failures/auth_failure.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<S, F> extends _i1.SmartFake implements _i2.Result<S, F> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [VerificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerificationService extends _i1.Mock
    implements _i3.VerificationService {
  MockVerificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<void, _i5.Failure>> requestVerification(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestVerification,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Result<void, _i5.Failure>>.value(
            _FakeResult_0<void, _i5.Failure>(
          this,
          Invocation.method(
            #requestVerification,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Result<void, _i5.Failure>>);

  @override
  _i4.Future<_i2.Result<_i3.VerificationStatus, _i5.Failure>>
      getVerificationStatus(String? userId) => (super.noSuchMethod(
            Invocation.method(
              #getVerificationStatus,
              [userId],
            ),
            returnValue: _i4
                .Future<_i2.Result<_i3.VerificationStatus, _i5.Failure>>.value(
                _FakeResult_0<_i3.VerificationStatus, _i5.Failure>(
              this,
              Invocation.method(
                #getVerificationStatus,
                [userId],
              ),
            )),
          ) as _i4.Future<_i2.Result<_i3.VerificationStatus, _i5.Failure>>);

  @override
  _i4.Future<_i2.Result<void, _i5.Failure>> cancelVerificationRequest(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelVerificationRequest,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Result<void, _i5.Failure>>.value(
            _FakeResult_0<void, _i5.Failure>(
          this,
          Invocation.method(
            #cancelVerificationRequest,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Result<void, _i5.Failure>>);

  @override
  _i4.Future<_i2.Result<bool, _i5.Failure>> isVerifiedPlus(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #isVerifiedPlus,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Result<bool, _i5.Failure>>.value(
            _FakeResult_0<bool, _i5.Failure>(
          this,
          Invocation.method(
            #isVerifiedPlus,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Result<bool, _i5.Failure>>);

  @override
  _i4.Future<_i2.Result<void, _i5.Failure>> upgradeToVerifiedPlus(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #upgradeToVerifiedPlus,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Result<void, _i5.Failure>>.value(
            _FakeResult_0<void, _i5.Failure>(
          this,
          Invocation.method(
            #upgradeToVerifiedPlus,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Result<void, _i5.Failure>>);
}
