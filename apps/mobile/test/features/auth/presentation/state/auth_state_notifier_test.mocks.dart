// Mocks generated by Mockito 5.4.6 from annotations
// in hive_ui/test/features/auth/presentation/state/auth_state_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hive_ui/application/services/auth_service.dart' as _i4;
import 'package:hive_ui/core/result/result.dart' as _i2;
import 'package:hive_ui/domain/entities/auth_challenge.dart' as _i3;
import 'package:hive_ui/domain/failures/auth_failure.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<S, F> extends _i1.SmartFake implements _i2.Result<S, F> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthChallenge_1 extends _i1.SmartFake implements _i3.AuthChallenge {
  _FakeAuthChallenge_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i4.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Result<String, _i6.Failure>> requestMagicLink(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestMagicLink,
          [email],
        ),
        returnValue: _i5.Future<_i2.Result<String, _i6.Failure>>.value(
            _FakeResult_0<String, _i6.Failure>(
          this,
          Invocation.method(
            #requestMagicLink,
            [email],
          ),
        )),
      ) as _i5.Future<_i2.Result<String, _i6.Failure>>);

  @override
  _i5.Future<_i2.Result<String, _i6.Failure>> verifyMagicLink(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyMagicLink,
          [token],
        ),
        returnValue: _i5.Future<_i2.Result<String, _i6.Failure>>.value(
            _FakeResult_0<String, _i6.Failure>(
          this,
          Invocation.method(
            #verifyMagicLink,
            [token],
          ),
        )),
      ) as _i5.Future<_i2.Result<String, _i6.Failure>>);

  @override
  _i5.Future<_i2.Result<void, _i6.Failure>> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<_i2.Result<void, _i6.Failure>>.value(
            _FakeResult_0<void, _i6.Failure>(
          this,
          Invocation.method(
            #signOut,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Result<void, _i6.Failure>>);

  @override
  _i3.AuthChallenge createAuthChallenge(String? email) => (super.noSuchMethod(
        Invocation.method(
          #createAuthChallenge,
          [email],
        ),
        returnValue: _FakeAuthChallenge_1(
          this,
          Invocation.method(
            #createAuthChallenge,
            [email],
          ),
        ),
      ) as _i3.AuthChallenge);
}
